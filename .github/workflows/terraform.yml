name: Terraform Azure Infrastructure Deployment

on:
  workflow_dispatch:
  push:
    paths:
      - 'IaC/**'
      - '.github/workflows/**'

env:
  TF_WORKING_DIR: ./IaC

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TERRAFORM_SP_OBJECT_ID: ${{ secrets.TERRAFORM_SP_OBJECT_ID }}
      SQL_ADMIN_LOGIN: ${{ secrets.SQL_ADMIN_LOGIN }}
      SQL_ADMIN_PASSWORD: ${{ secrets.SQL_ADMIN_PASSWORD }}
      MY_IP_ADDRESS: ${{ secrets.MY_IP_ADDRESS }}

    steps:
      # 1. Checkout code
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # 3. Terraform fmt (format check)
      - name: Terraform Fmt
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform fmt -recursive

      # 4. Terraform Init
      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -input=false -upgrade

      # 5. Terraform validate
      - name: Terraform Validate
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform validate

      # 6. Terraform Plan
      - name: Terraform Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -var="sql_admin_login=${{ env.SQL_ADMIN_LOGIN }}" -var="sql_admin_password=${{ env.SQL_ADMIN_PASSWORD }}" -var="my_ip_address=${{ env.MY_IP_ADDRESS }}" -var="terraform_sp_object_id=${{ env.TERRAFORM_SP_OBJECT_ID }}"

      # 7. Terraform Apply
      - name: Terraform Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve -var="sql_admin_login=${{ env.SQL_ADMIN_LOGIN }}" -var="sql_admin_password=${{ env.SQL_ADMIN_PASSWORD }}" -var="my_ip_address=${{ env.MY_IP_ADDRESS }}" -var="terraform_sp_object_id=${{ env.TERRAFORM_SP_OBJECT_ID }}"

      # 8. Create SQL AD User
      - name: Create SQL AD User
        run: curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add - && \
            curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list && \
            sudo apt-get update && sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18 mssql-tools18 unixodbc-dev && \
            /opt/mssql-tools18/bin/sqlcmd -S ${{ secrets.AZURE_SQL_SERVER }}.database.windows.net -d ${{ secrets.AZURE_SQL_DB }} -G -U ${{ secrets.SQL_ADMIN_LOGIN }} -P ${{ secrets.SQL_ADMIN_PASSWORD }} -Q "CREATE USER [fishspindays-prod-ne-app] FROM EXTERNAL PROVIDER; ALTER ROLE db_datareader ADD MEMBER [fishspindays-prod-ne-app]; ALTER ROLE db_datawriter ADD MEMBER [fishspindays-prod-ne-app];"
        env:
          AZURE_SQL_SERVER: ${{ secrets.AZURE_SQL_SERVER }}
          AZURE_SQL_DB: ${{ secrets.AZURE_SQL_DB }}
          SQL_ADMIN_LOGIN: ${{ secrets.SQL_ADMIN_LOGIN }}
          SQL_ADMIN_PASSWORD: ${{ secrets.SQL_ADMIN_PASSWORD }}

